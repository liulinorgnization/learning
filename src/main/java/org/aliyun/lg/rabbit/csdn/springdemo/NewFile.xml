<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
    xsi:schemaLocation="http://www.springframework.org/schema/rabbit
    http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

    <!-- connection工厂 -->
    <rabbit:connection-factory id="connectionFactory"
        host="127.0.0.1" port="5672" username="zx" password="zx"
        virtual-host="/zx" />

    <!-- MQ的管理，包括队列、交换器等 -->
    <rabbit:admin connection-factory="connectionFactory" />

    <!-- 声明队列 (auto表示需要时创建)-->
    <rabbit:queue name="myQueue" auto-declare="true"/>
    
    <!-- 声明fanout类型的exchange (auto表示需要时创建) -->
    <rabbit:fanout-exchange name ="fanoutExchange" auto-declare="true" durable="true" >  <!-- durable是否持久化, 安全性还是性能的权衡 -->
        <!-- 注意, 在生产者/消费者 分离的系统中, exchange和queue也分离, 绑定应该交给运维在rabbit管理界面进行, 而不是配置下面的bindings属性 -->
        <!-- 小细节, rabbit管理界面绑定时界面属性中binding key被写成了routing key? -->
        <rabbit:bindings>
            <rabbit:binding queue="myQueue"/>  <!-- 还能指定通过pattern属性指定bindingType -->
        </rabbit:bindings>
    </rabbit:fanout-exchange>
    
    <rabbit:topic-exchange name="test" auto-declare="true" durable="false" >
    </rabbit:topic-exchange>

    <!-- 定义Rabbit模板的bean，指定 exchange或queue -->
    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory" exchange="fanoutExchange" />  <!-- 还能指定routing-key属性 -->

    <bean id="recv" class="com.zx.rabbitmq.spring.Recv" />
    <!-- 设置消费者要监听的队列, 并指定有消息时执行的方法 -->
    <rabbit:listener-container connection-factory="connectionFactory">
        <rabbit:listener ref="recv" method="listen" queue-names="myQueue" />
    </rabbit:listener-container>

</beans>